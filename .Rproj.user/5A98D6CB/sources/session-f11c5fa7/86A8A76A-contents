#get estimated values for alpha and omega
library(musseco)
library(stringr)
library(fitMuSSECo)

#alpha = inflation of the mutation rate from A (ancestral) to V (variant)
#omega = relative transmission fitness (between-host selection coefficient)

#read true parameter values
params_true <- read.csv("params.csv")

#read all data
#loc_results <- "CoalescentJl_simulations/trees"
loc_results <- "TiPS_simulations/trees"
all_results <- list.files(loc_results,
                          pattern = "*.rda",
                          recursive = TRUE,
                          full.names = TRUE)

all_data <- data.frame()

for(i in 1:length(all_results)){

  texts <- str_split(all_results[i], "/")
  params <- texts[[1]][3]
  param_n <- str_split(params, "_")[[1]][2]

  rep <- texts[[1]][4]
  rep <- str_split(rep, "rep")[[1]][2]

  res <- load(all_results[i])

  #no augmented likelihood
  cis <- get_CI(fb)

  alpha <- cis[1,1]
  alpha_lower <- cis[1,2]
  alpha_upper <- cis[1,3]

  omega <- cis[2,1]
  omega_lower <- cis[2,2]
  omega_upper <- cis[2,3]


  #using augmented likelihood
  cis_au <- get_CI(fb_au)

  alpha_au <- cis_au[1,1]
  alpha_au_lower <- cis_au[1,2]
  alpha_au_upper <- cis_au[1,3]

  omega_au <- cis_au[2,1]
  omega_au_lower <- cis_au[2,2]
  omega_au_upper <- cis_au[2,3]


  results <- data.frame(param = param_n, rep = rep,
                        true_alpha =  params_true$alpha[as.numeric(param_n)],
                        true_omega =  params_true$omega[as.numeric(param_n)],
                        omega = omega, omega_lower = omega_lower, omega_upper = omega_upper,
                        alpha = alpha, alpha_lower = alpha_lower, alpha_upper = alpha_upper,
                        omega_au = omega_au, omega_au_lower = omega_au_lower, omega_au_upper = omega_au_upper,
                        alpha_au = alpha_au, alpha_au_lower = alpha_au_lower, alpha_au_upper = alpha_au_upper)


  all_data <- rbind(all_data, results)

}

saveRDS(all_data, "TiPS_fit_results.rds")

